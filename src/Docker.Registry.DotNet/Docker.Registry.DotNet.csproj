<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFrameworks>net8.0</TargetFrameworks>
		<DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
		<LangVersion>latest</LangVersion>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<NoWarn>1701;1702;1591</NoWarn>
	</PropertyGroup>

	<PropertyGroup>
		<Version>2.0.0</Version>
		<PackageId>Docker.Registry.DotNet</PackageId>
		<Authors>Rich Quackenbush, Jaben Cargman and the Docker.Registry.DotNet Contributors</Authors>
		<Copyright>Copyright © Rich Quackenbush, Jaben Cargman and the Docker.Registry.DotNet Contributors 2017-2022</Copyright>
		<Description>Docker.DotNet is a library that allows you to interact with the Docker Registry API V2 programmatically with fully asynchronous, non-blocking and object-oriented code in your .NET applications.</Description>
		<PackageIconUrl>https://raw.githubusercontent.com/ChangemakerStudios/Docker.Registry.DotNet/master/assets/docker_registry_dotnet.png</PackageIconUrl>
		<PackageProjectUrl>https://github.com/ChangemakerStudios/Docker.Registry.DotNet</PackageProjectUrl>
		<RepositoryUrl>https://github.com/ChangemakerStudios/Docker.Registry.DotNet</RepositoryUrl>
		<PackageReleaseNotes>
			* Added direct .NET 5/6/7/8 support.
			* Switched to more DDD style configuration with a builder.
			* Removed "Async" from the function names. But, added Legacy helpers with [Obsolete] attributes.
			* Simplified Authentication with configuraiton builders.
			* Added Docker Hub "registry" support.
			* Added ITagOperation.ListTagsByDigests() that provided all tags for a specific image.
			* More .NET Core style codebase (still can't directly inject HttpClient, though).
			* Added ActivitySource support.
			* Bug fixes/error handling improvements.
		</PackageReleaseNotes>
		<RepositoryType>git</RepositoryType>
		<PackageLicenseFile>LICENSE</PackageLicenseFile>
		<PackageTags>docker registry .net C# client</PackageTags>
	</PropertyGroup>

	<PropertyGroup>
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		<IncludeSymbols>true</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All" />
		<PackageReference Include="PolySharp" Version="1.14.1">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="8.0.1" />
		<PackageReference Include="System.ValueTuple" Version="4.5.0" />
		<PackageReference Include="System.Diagnostics.DiagnosticSource" Version="8.0.1" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
		<PackageReference Include="System.Buffers" Version="4.5.1" />

	</ItemGroup>
</Project>